const { Telegraf, session } = require('telegraf');

const bot = new Telegraf('7616676414:AAED_kQUdF5PPnSWfdCDGeqnWji0TYznNYY');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
bot.use(session({
  defaultSession: () => ({ step: null })
}));

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é—Ñ
const mainMenu = {
  reply_markup: {
    inline_keyboard: [
      [{ text: '–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç', callback_data: 'add_product' }],
      [{ text: '–û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', callback_data: 'calories_left' }],
      [{ text: '–ú–æ–∏ –ø—Ä–∏—ë–º—ã –ø–∏—â–∏', callback_data: 'meals' }],
      [{ text: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ', callback_data: 'extra_menu' }],
      [{
        text: '–û—Ç–∫—Ä—ã—Ç—å Web App',
        web_app: { url: 'https://velvety-marigold-d0d59a.netlify.app' }
      }]
    ]
  }
};

// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
bot.start((ctx) => {
  ctx.reply(
    '–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–∏—Ç–∞–Ω–∏—é. üçè\n\n' +
    '–Ø –ø–æ–º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–Ω–µ–≤–Ω—É—é –Ω–æ—Ä–º—É –∫–∞–ª–æ—Ä–∏–π.\n\n' +
    '–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.',
    {
      reply_markup: {
        inline_keyboard: [
          [{ text: '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å', callback_data: 'calculate_calories' }],
          [{
            text: '–û—Ç–∫—Ä—ã—Ç—å Web App',
            web_app: { url: 'https://velvety-marigold-d0d59a.netlify.app' }
          }]
        ]
      }
    }
  );
});

// –ó–∞–ø—É—Å–∫ –¥–∏–∞–ª–æ–≥–∞ —Ä–∞—Å—á—ë—Ç–∞ –∫–∞–ª–æ—Ä–∏–π
bot.action('calculate_calories', (ctx) => {
  ctx.session = { step: 'age' }; // –ù–∞—á–∏–Ω–∞–µ–º —Å –∑–∞–ø—Ä–æ—Å–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞
  return ctx.reply('–í–≤–µ–¥–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, 25):');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞
bot.hears(/^\d+$/, (ctx) => {
  if (ctx.session?.step !== 'age') return;

  const age = parseInt(ctx.message.text);
  if (age < 10 || age > 120) {
    return ctx.reply('‚ùå –í–≤–µ–¥–∏ —Ä–µ–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç (–æ—Ç 10 –¥–æ 120 –ª–µ—Ç).');
  }

  ctx.session.age = age;
  ctx.session.step = 'weight'; // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤–µ—Å—É
  return ctx.reply('–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Å–≤–æ–π –≤–µ—Å –≤ –∫–≥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 70):');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ—Å–∞
bot.hears(/^\d+$/, (ctx) => {
  if (ctx.session?.step !== 'weight') return;

  const weight = parseFloat(ctx.message.text);
  if (weight < 30 || weight > 300) {
    return ctx.reply('‚ùå –í–≤–µ–¥–∏ —Ä–µ–∞–ª—å–Ω—ã–π –≤–µ—Å (–æ—Ç 30 –¥–æ 300 –∫–≥).');
  }

  ctx.session.weight = weight;
  ctx.session.step = 'height'; // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ä–æ—Å—Ç—É
  return ctx.reply('–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Ä–æ—Å—Ç –≤ —Å–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, 175):');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–æ—Å—Ç–∞
bot.hears(/^\d+$/, (ctx) => {
  if (ctx.session?.step !== 'height') return;

  const height = parseFloat(ctx.message.text);
  if (height < 100 || height > 250) {
    return ctx.reply('‚ùå –í–≤–µ–¥–∏ —Ä–µ–∞–ª—å–Ω—ã–π —Ä–æ—Å—Ç (–æ—Ç 100 –¥–æ 250 —Å–º).');
  }

  ctx.session.height = height;
  ctx.session.step = 'gender'; // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–ª—É
  return ctx.reply('–í—ã–±–µ—Ä–∏ –ø–æ–ª:', {
    reply_markup: {
      inline_keyboard: [
        [{ text: '–ú—É–∂—Å–∫–æ–π ‚ôÇÔ∏è', callback_data: 'male' }],
        [{ text: '–ñ–µ–Ω—Å–∫–∏–π ‚ôÄÔ∏è', callback_data: 'female' }]
      ]
    }
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞
bot.action(['male', 'female'], (ctx) => {
  if (ctx.session?.step !== 'gender') return;

  ctx.session.gender = ctx.callbackQuery.data;
  ctx.session.step = 'activity'; // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  return ctx.reply('–í—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', {
    reply_markup: {
      inline_keyboard: [
        [{ text: 'üõå –ù–∏–∑–∫–∏–π (–æ—Ñ–∏—Å–Ω–∞—è —Ä–∞–±–æ—Ç–∞)', callback_data: 'activity_1' }],
        [{ text: 'üö∂‚Äç‚ôÇÔ∏è –°—Ä–µ–¥–Ω–∏–π (—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 1-3 —Ä–∞–∑–∞/–Ω–µ–¥–µ–ª—é)', callback_data: 'activity_2' }],
        [{ text: 'üèãÔ∏è‚Äç‚ôÇÔ∏è –í—ã—Å–æ–∫–∏–π (—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 5+ —Ä–∞–∑/–Ω–µ–¥–µ–ª—é)', callback_data: 'activity_3' }]
      ]
    }
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ —Ä–∞—Å—á—ë—Ç –∫–∞–ª–æ—Ä–∏–π
bot.action(['activity_1', 'activity_2', 'activity_3'], (ctx) => {
  if (ctx.session?.step !== 'activity') return;

  const activity = ctx.callbackQuery.data;
  const { age, weight, height, gender } = ctx.session;

  // –§–æ—Ä–º—É–ª–∞ –ú–∏—Ñ—Ñ–ª–∏–Ω–∞-–°–∞–Ω –ñ–µ–æ—Ä–∞ (–±–æ–ª–µ–µ —Ç–æ—á–Ω–∞—è, —á–µ–º –•–∞—Ä—Ä–∏—Å–∞-–ë–µ–Ω–µ–¥–∏–∫—Ç–∞)
  let bmr;
  if (gender === 'male') {
    bmr = 10 * weight + 6.25 * height - 5 * age + 5;
  } else {
    bmr = 10 * weight + 6.25 * height - 5 * age - 161;
  }

  // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  const activityFactors = {
    activity_1: 1.2,    // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    activity_2: 1.375,  // –ù–µ–±–æ–ª—å—à–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    activity_3: 1.55    // –£–º–µ—Ä–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
  };

  const dailyCalories = Math.round(bmr * activityFactors[activity]);
  ctx.session.dailyCalories = dailyCalories;
  ctx.session.step = null; // –ó–∞–≤–µ—Ä—à–∞–µ–º –¥–∏–∞–ª–æ–≥

  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  const resultText = 
    `‚úÖ –†–∞—Å—á—ë—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!\n\n` +
    `‚ñ™ –í–æ–∑—Ä–∞—Å—Ç: ${age} –ª–µ—Ç\n` +
    `‚ñ™ –í–µ—Å: ${weight} –∫–≥\n` +
    `‚ñ™ –†–æ—Å—Ç: ${height} —Å–º\n` +
    `‚ñ™ –ü–æ–ª: ${gender === 'male' ? '–º—É–∂—Å–∫–æ–π ‚ôÇÔ∏è' : '–∂–µ–Ω—Å–∫–∏–π ‚ôÄÔ∏è'}\n` +
    `\nüî• –í–∞—à–∞ –¥–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞: <b>${dailyCalories} –∫–∫–∞–ª</b>`;

  return ctx.replyWithHTML(resultText, mainMenu);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (ctx) => {
  if (ctx.session?.step) {
    return ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å –Ω–∞ —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å.');
  }
  return ctx.reply('–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.', mainMenu);
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch()
  .then(() => console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω üöÄ'))
  .catch((err) => console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', err));